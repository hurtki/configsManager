name: Release AUR

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    environment: aur-deployment
    container: archlinux:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          pacman -Syu --noconfirm base-devel git openssh

      
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUR_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          chmod 700 ~/.ssh
          # вычистим, чтобы не было мусора
          rm -f ~/.ssh/known_hosts
          # подтянем ключи AUR
          ssh-keyscan -t ed25519 aur.archlinux.org >> ~/.ssh/known_hosts
          ssh-keyscan -t rsa aur.archlinux.org >> ~/.ssh/known_hosts
          ssh-keyscan -t ecdsa aur.archlinux.org >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts
          git config --global core.sshCommand "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes"
      - name: Debug SSH
        run: |
          ssh -vvv -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes aur@aur.archlinux.org || true

      - name: Test SSH connection
        run: ssh -T aur@aur.archlinux.org || true

      - name: Clone AUR repo
        run: git clone ssh://aur@aur.archlinux.org/configsmanager.git aur-repo

      - name: Update PKGBUILD
        run: |
          cd aur-repo
          VERSION=${GITHUB_REF##*/}
          VERSION=${VERSION#v}
          sed -i "s/^pkgver=.*/pkgver=${VERSION}/" PKGBUILD
          makepkg --printsrcinfo > .SRCINFO
          git config user.name "github-bot"
          git config user.email "bot@example.com"
          git add PKGBUILD .SRCINFO
          git commit -m "Update to ${VERSION}"
          git push

