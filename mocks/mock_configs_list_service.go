// Code generated by MockGen. DO NOT EDIT.
// Source: services/ConfigsListService.go
//
// Generated by this command:
//
//	mockgen -source=services/ConfigsListService.go -destination=mocks/mock_configs_list_service.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	services "github.com/hurtki/configsManager/services"
	gomock "go.uber.org/mock/gomock"
)

// MockConfigsListService is a mock of ConfigsListService interface.
type MockConfigsListService struct {
	ctrl     *gomock.Controller
	recorder *MockConfigsListServiceMockRecorder
	isgomock struct{}
}

// MockConfigsListServiceMockRecorder is the mock recorder for MockConfigsListService.
type MockConfigsListServiceMockRecorder struct {
	mock *MockConfigsListService
}

// NewMockConfigsListService creates a new mock instance.
func NewMockConfigsListService(ctrl *gomock.Controller) *MockConfigsListService {
	mock := &MockConfigsListService{ctrl: ctrl}
	mock.recorder = &MockConfigsListServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigsListService) EXPECT() *MockConfigsListServiceMockRecorder {
	return m.recorder
}

// GenerateUniqueKeyForPath mocks base method.
func (m *MockConfigsListService) GenerateUniqueKeyForPath(path string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateUniqueKeyForPath", path)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateUniqueKeyForPath indicates an expected call of GenerateUniqueKeyForPath.
func (mr *MockConfigsListServiceMockRecorder) GenerateUniqueKeyForPath(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateUniqueKeyForPath", reflect.TypeOf((*MockConfigsListService)(nil).GenerateUniqueKeyForPath), path)
}

// Load mocks base method.
func (m *MockConfigsListService) Load() (*services.ConfigsList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(*services.ConfigsList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load.
func (mr *MockConfigsListServiceMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockConfigsListService)(nil).Load))
}

// Save mocks base method.
func (m *MockConfigsListService) Save(arg0 *services.ConfigsList) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockConfigsListServiceMockRecorder) Save(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockConfigsListService)(nil).Save), arg0)
}
